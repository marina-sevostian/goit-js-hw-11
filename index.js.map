{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export function fetchImages(inputValue) {\n  return fetch(\n    `https://pixabay.com/api/?key=46729875-7729b8e358007a47de817f6d1&q=${inputValue}&image_type=photo&orientation=horizontal&safesearch=true`\n  )\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 404) {\n          return [];\n        }\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n","export function renderImages(images) {\n  const markup = images\n    .map(image => {\n      return `\n  <li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n    <img\n      class=\"gallery-image\"\n      src=\"${image.webformatURL}\"\n      data-source=\"${image.largeImageURL}\"\n      alt=\"${image.tags}\"\n    />\n  </a>\n  <p class=\"\">Likes ${image.likes}</p>\n  <p class=\"\">Views ${image.views}</p>\n  <p class=\"\">Comments ${image.comments}</p>\n  <p class=\"\">Downloads ${image.downloads}</p>\n</li>\n      `;\n    })\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n","import { fetchImages } from './js/pixabay-api';\nimport { renderImages } from './js/render-functions';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nlet gallery = document.querySelector('.gallery');\nconst fetchImagesBtn = document.querySelector('.search-form-btn');\nlet searchFormEl = document.querySelector('.search-form');\n\nfetchImagesBtn.addEventListener('submit', e => {\n  e.preventDefault();\n  const inputValue = input.value.trim();\n  cleanHtml();\n  if (inputValue !== '') {\n    fetchImages(inputValue)\n      .then(foundImages => {\n        if (foundImages.length === 0) {\n          return iziToast.error({\n            title: 'Error',\n            message: `Sorry, there are no images matching your search query. Please try again!`,\n            color: '#ef4040',\n            close: false,\n          });\n        }\n        renderImages(foundImages);\n        SimpleLightbox.refresh();\n      })\n      .catch(error => console.log(error));\n  }\n});\n\nnew SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\nfunction cleanHtml() {\n  gallery.innerHTML = '';\n}\n//   searchFormEl.reset();\n"],"names":["fetchImages","inputValue","response","error","renderImages","images","markup","image","gallery","fetchImagesBtn","e","cleanHtml","foundImages","iziToast","SimpleLightbox"],"mappings":"6vBAAO,SAASA,EAAYC,EAAY,CACtC,OAAO,MACL,qEAAqEA,CAAU,0DAChF,EACE,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GAAI,CAChB,GAAIA,EAAS,SAAW,IACtB,MAAO,GAET,MAAM,IAAI,MAAMA,EAAS,MAAM,CAChC,CACD,OAAOA,EAAS,MACtB,CAAK,EACA,MAAMC,GAAS,CACd,QAAQ,MAAMA,CAAK,CACzB,CAAK,CACL,CChBO,SAASC,EAAaC,EAAQ,CACnC,MAAMC,EAASD,EACZ,IAAIE,GACI;AAAA;AAAA,kCAEqBA,EAAM,aAAa;AAAA;AAAA;AAAA,aAGxCA,EAAM,YAAY;AAAA,qBACVA,EAAM,aAAa;AAAA,aAC3BA,EAAM,IAAI;AAAA;AAAA;AAAA,sBAGDA,EAAM,KAAK;AAAA,sBACXA,EAAM,KAAK;AAAA,yBACRA,EAAM,QAAQ;AAAA,0BACbA,EAAM,SAAS;AAAA;AAAA,OAGpC,EACA,KAAK,EAAE,EACV,QAAQ,mBAAmB,YAAaD,CAAM,CAChD,CCbA,IAAIE,EAAU,SAAS,cAAc,UAAU,EAC/C,MAAMC,EAAiB,SAAS,cAAc,kBAAkB,EAC7C,SAAS,cAAc,cAAc,EAExDA,EAAe,iBAAiB,SAAUC,GAAK,CAC7CA,EAAE,eAAc,EAChB,MAAMT,EAAa,MAAM,MAAM,KAAI,EACnCU,IACIV,IAAe,IACjBD,EAAYC,CAAU,EACnB,KAAKW,GAAe,CACnB,GAAIA,EAAY,SAAW,EACzB,OAAOC,EAAS,MAAM,CACpB,MAAO,QACP,QAAS,2EACT,MAAO,UACP,MAAO,EACnB,CAAW,EAEHT,EAAaQ,CAAW,EACxBE,EAAe,QAAO,CAC9B,CAAO,EACA,MAAMX,GAAS,QAAQ,IAAIA,CAAK,CAAC,CAExC,CAAC,EAED,IAAIW,EAAe,aAAc,CAC/B,aAAc,MACd,aAAc,GAChB,CAAC,EACD,SAASH,GAAY,CACnBH,EAAQ,UAAY,EACtB"}